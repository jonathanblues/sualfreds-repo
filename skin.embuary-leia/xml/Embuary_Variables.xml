<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<!-- EmbyCon sources -->
	<variable name="EmbyCon.FavMovies">
		<value condition="System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?media_type=Movies&amp;mode=GET_CONTENT&amp;url=%7bserver%7d%2femby%2fUsers%2f%7buserid%7d%2fItems%3fFields%3d%7bfield_filters%7d%26Recursive%3dtrue%26Filters%3dIsFavorite%26IncludeItemTypes%3dMovie%26ImageTypeLimit%3d1%26format%3djson&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]</value>
	</variable>
	<variable name="EmbyCon.FavTVShows">
		<value condition="System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?media_type=tvshows&amp;mode=GET_CONTENT&amp;url=%7bserver%7d%2femby%2fUsers%2f%7buserid%7d%2fItems%3fFields%3d%7bfield_filters%7d%26Recursive%3dtrue%26Filters%3dIsFavorite%26IncludeItemTypes%3dSeries%26ImageTypeLimit%3d1%26format%3djson&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]</value>
	</variable>
	<variable name="EmbyCon.FavEpisodes">
		<value condition="System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?media_type=Episodes&amp;mode=GET_CONTENT&amp;url=%7Bserver%7D%2Femby%2FUsers%2F%7Buserid%7D%2FItems%3FSortBy%3DSortName%26amp%3BSortOrder%3DAscending%26amp%3BFilters%3DIsFavorite%26amp%3BRecursive%3Dtrue%26amp%3BFields%3DPrimaryImageAspectRatio%2CBasicSyncInfo%26amp%3BCollapseBoxSetItems%3Dfalse%26amp%3BExcludeLocationTypes%3DVirtual%26amp%3BEnableTotalRecordCount%3Dfalse%26amp%3BLimit%3D100%26amp%3BIncludeItemTypes%3DEpisode&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]</value>
	</variable>
	<variable name="EmbyCon.FavArtists">
		<value condition="System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?media_type=songs&amp;mode=GET_CONTENT&amp;url=%7Bserver%7D%2Femby%2FArtists%3FSortBy%3DSortName%26SortOrder%3DAscending%26Filters%3DIsFavorite%26Recursive%3Dtrue%26Fields%3DPrimaryImageAspectRatio%252CBasicSyncInfo%26CollapseBoxSetItems%3Dfalse%26ExcludeLocationTypes%3DVirtual%26EnableTotalRecordCount%3Dfalse%26Limit%3D20%26userId%3D%7Buserid%7D&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]</value>
	</variable>
	<variable name="EmbyCon.FavAlbums">
		<value condition="System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?media_type=songs&amp;mode=GET_CONTENT&amp;url=%7Bserver%7D%2Femby%2FUsers%2F%7Buserid%7D%2FItems%3FSortBy%3DSortName%26SortOrder%3DAscending%26Filters%3DIsFavorite%26Recursive%3Dtrue%26Fields%3DPrimaryImageAspectRatio%252CBasicSyncInfo%26CollapseBoxSetItems%3Dfalse%26ExcludeLocationTypes%3DVirtual%26EnableTotalRecordCount%3Dfalse%26Limit%3D20%26IncludeItemTypes%3DMusicAlbum&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]</value>
	</variable>
	<variable name="EmbyCon.FavSongs">
		<value condition="System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?media_type=songs&amp;mode=GET_CONTENT&amp;url=%7Bserver%7D%2Femby%2FUsers%2F%7Buserid%7D%2FItems%3FSortBy%3DSortName%26SortOrder%3DAscending%26Filters%3DIsFavorite%26Recursive%3Dtrue%26Fields%3DPrimaryImageAspectRatio%252CBasicSyncInfo%26CollapseBoxSetItems%3Dfalse%26ExcludeLocationTypes%3DVirtual%26EnableTotalRecordCount%3Dfalse%26Limit%3D20%26IncludeItemTypes%3DAudio&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]</value>
	</variable>
	<variable name="EmbyCon.InProgressMedia">
		<value condition="System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?mode=GET_CONTENT&amp;media_type=Video&amp;url=%7Bserver%7D%2Femby%2FUsers%2F%7Buserid%7D%2FItems%2FResume%3FLimit%3D12%26Recursive%3Dtrue%26Fields%3DPrimaryImageAspectRatio%2CBasicSyncInfo%26ImageTypeLimit%3D1%26EnableImageTypes%3DPrimary%2CBackdrop%2CThumb%26EnableTotalRecordCount%3Dfalse%26MediaTypes%3DVideo&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]</value>
	</variable>
	<variable name="EmbyCon.NextUp">
		<value condition="System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?media_type=Episodes&amp;mode=GET_CONTENT&amp;name_format=Episode%7cepisode_name_format&amp;url=%7bserver%7d%2femby%2fShows%2fNextUp%2f%3fUserid%3d%7buserid%7d%26Limit%3d%7bItemLimit%7d%26Recursive%3dtrue%26Fields%3d%7bfield_filters%7d%26Filters%3dIsUnplayed%2cIsNotFolder%26IsVirtualUnaired%3dfalse%26IsMissing%3dFalse%26IncludeItemTypes%3dEpisode%26ImageTypeLimit%3d1%26format%3djson&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]</value>
	</variable>
	<variable name="EmbyCon.NewMovies">
		<value condition="System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?media_type=Movies&amp;mode=GET_CONTENT&amp;url=%7bserver%7d%2femby%2fUsers%2f%7buserid%7d%2fItems%3fLimit%3d%7bItemLimit%7d%26Recursive%3dtrue%26SortBy%3dDateCreated%26Fields%3d%7bfield_filters%7d%26SortOrder%3dDescending%26Filters%3d%7bIsUnplayed%2c%7dIsNotFolder%26IncludeItemTypes%3dMovie%26ImageTypeLimit%3d1%26format%3djson&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]</value>
	</variable>
	<variable name="EmbyCon.NewEpisodes">
		<value condition="System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?media_type=Episodes&amp;mode=GET_CONTENT&amp;name_format=Episode%7cepisode_name_format&amp;url=%7bserver%7d%2femby%2fUsers%2f%7buserid%7d%2fItems%2fLatest%3fLimit%3d%7bItemLimit%7d%26Recursive%3dtrue%26GroupItems%3dtrue%26SortBy%3dDateCreated%26Fields%3d%7bfield_filters%7d%26SortOrder%3dDescending%26Filters%3d%7bIsUnplayed%7d%26IsVirtualUnaired%3dfalse%26IsMissing%3dFalse%26IncludeItemTypes%3dEpisode%26ImageTypeLimit%3d1%26format%3djson&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]</value>
	</variable>
	<variable name="EmbyCon.NewAlbums">
		<value condition="System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?media_type=albums&amp;mode=GET_CONTENT&amp;url=%7Bserver%7D%2Femby%2FUsers%2F%7Buserid%7D%2FItems%2FLatest%3FIncludeItemTypes%3DAudio%26Limit%3D24%26Fields%3DPrimaryImageAspectRatio%252CBasicSyncInfo%26ImageTypeLimit%3D1%26EnableImageTypes%3DPrimary%252CBackdrop%252CBanner%252CThumb%26EnableTotalRecordCount%3Dfalse&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]</value>
	</variable>
	<variable name="EmbyCon.InProgressMovies">
		<value condition="System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?media_type=Movies&amp;mode=GET_CONTENT&amp;url=%7bserver%7d%2femby%2fUsers%2f%7buserid%7d%2fItems%3fLimit%3d%7bItemLimit%7d%26Recursive%3dtrue%26Fields%3d%7bfield_filters%7d%26Filters%3dIsResumable%26IncludeItemTypes%3dMovie%26ImageTypeLimit%3d1%26format%3djson&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]</value>
	</variable>
	<variable name="EmbyCon.MovieGenres">
		<value condition="System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?mode=GENRES&amp;item_type=movie&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]</value>
	</variable>
	<variable name="EmbyCon.RecommendedMovies">
		<value condition="System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?media_type=Movies&amp;mode=GET_CONTENT&amp;url=%7Bserver%7D%2Femby%2FUsers%2F%7Buserid%7D%2FItems%3FSortBy%3DCommunityRating%252CSortName%26SortOrder%3DDescending%26IncludeItemTypes%3DMovie%26Recursive%3Dtrue%26Fields%3DPrimaryImageAspectRatio%252CMediaSourceCount%252CBasicSyncInfo%26ImageTypeLimit%3D1%26EnableImageTypes%3DPrimary%252CBackdrop%252CBanner%252CThumb%26StartIndex%3D0%26Limit%3D100%26Filters%3DIsUnPlayed&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]</value>
	</variable>
	<variable name="EmbyCon.SimilarMovies">
		<value condition="System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?media_type=Movies&amp;mode=GET_CONTENT&amp;url=%7Bserver%7D%2Femby%2FMovies%2FRecommendations%3FuserId%3D%7Buserid%7D%26categoryLimit%3D1%26ItemLimit%3D8%26format%3Djson%26ImageTypeLimit%3D1%26IsMissing%3DFalse&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]</value>
	</variable>
	<variable name="EmbyCon.InProgressShows">
		<value condition="System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?media_type=Episodes&amp;mode=GET_CONTENT&amp;name_format=Episode%7cepisode_name_format&amp;url=%7bserver%7d%2femby%2fUsers%2f%7buserid%7d%2fItems%3fLimit%3d%7bItemLimit%7d%26Recursive%3dtrue%26Fields%3d%7bfield_filters%7d%26Filters%3dIsResumable%26IncludeItemTypes%3dEpisode%26ImageTypeLimit%3d1%26format%3djson&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]</value>
	</variable>
	<variable name="EmbyCon.TVShowGenres">
		<value condition="System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?mode=GENRES&amp;item_type=tvshow&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]</value>
	</variable>
	<variable name="EmbyCon.RecommendedShows">
		<value condition="System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?media_type=tvshows&amp;mode=GET_CONTENT&amp;url=%7Bserver%7D%2Femby%2FUsers%2F%7Buserid%7D%2FItems%3FSortBy%3DSortName%26SortOrder%3DAscending%26IncludeItemTypes%3DSeries%26Recursive%3Dtrue%26Fields%3DPrimaryImageAspectRatio%252CBasicSyncInfo%26ImageTypeLimit%3D1%26EnableImageTypes%3DPrimary%252CBackdrop%252CBanner%252CThumb%26StartIndex%3D0%26Limit%3D100%26Filters%3DIsUnPlayed&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]</value>
		<value condition="System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?item_type=Series&amp;media_type=tvshows&amp;mode=SHOW_CONTENT&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]</value>
	</variable>
	<variable name="EmbyCon.OftenPlayedSongs">
		<value condition="System.HasAddon(plugin.video.embycon)">plugin://plugin.video.embycon/?media_type=songs&amp;mode=GET_CONTENT&amp;url=%7Bserver%7D%2Femby%2FUsers%2F%7Buserid%7D%2FItems%3FSortBy%3DPlayCount%26SortOrder%3DDescending%26IncludeItemTypes%3DAudio%26Limit%3D12%26Recursive%3Dtrue%26Fields%3DPrimaryImageAspectRatio%252CAudioInfo%26Filters%3DIsPlayed%26ImageTypeLimit%3D1%26EnableImageTypes%3DPrimary%252CBackdrop%252CBanner%252CThumb%26EnableTotalRecordCount%3Dfalse&amp;reload=$INFO[Window(home).Property(plugin.video.embycon-embycon_widget_reload)]</value>
	</variable>
	<!-- Embcon/Native DB vars -->
	<variable name="View_Cast_Content">
		<value condition="Container.Content(sets) | String.IsEqual(ListItem.DBType,set)"></value>
		<value condition="!Container.Content(seasons) + ListItem.IsParentFolder"></value>
		<value condition="String.StartsWith(ListItem.Path,plugin://plugin.video.embycon) + Container.Content(seasons) + ListItem.IsParentFolder">plugin://plugin.video.embycon?mode=WIDGET_CONTENT_CAST&amp;id=$INFO[ListItem(1).Property(id)]</value>
		<value condition="String.StartsWith(ListItem.Path,plugin://plugin.video.embycon)">plugin://plugin.video.embycon?mode=WIDGET_CONTENT_CAST&amp;id=$INFO[ListItem.Property(id)]</value>
		<value condition="String.IsEqual(ListItem.DBType,movie) + !String.IsEmpty(ListItem.DBID) + !String.IsEqual(ListItem.DBID,0)">plugin://plugin.get.cast?mode=dbid&amp;&amp;dbtype=movie&amp;&amp;dbinfo=$INFO[ListItem.DBID]</value>
		<value condition="String.IsEqual(ListItem.DBType,movie) + String.IsEqual(ListItem.DBID,0)">plugin://plugin.get.cast?mode=title&amp;&amp;dbtype=movie&amp;&amp;dbinfo=$INFO[ListItem.Title]</value>
		<value condition="String.IsEqual(ListItem.DBType,tvshow) + !String.IsEmpty(ListItem.DBID) + !String.IsEqual(ListItem.DBID,0)">plugin://plugin.get.cast?mode=dbid&amp;&amp;dbtype=tvshow&amp;&amp;dbinfo=$INFO[ListItem.DBID]</value>
		<value condition="String.IsEqual(ListItem.DBType,tvshow) + String.IsEqual(ListItem.DBID,0)">plugin://plugin.get.cast?mode=title&amp;&amp;dbtype=tvshow&amp;&amp;dbinfo=$INFO[ListItem.TVShowTitle]</value>
		<value condition="[String.IsEqual(ListItem.DBType,episode) | String.IsEqual(ListItem.DBType,season)] + !String.IsEmpty(ListItem.DBID)">plugin://plugin.get.cast?mode=title&amp;&amp;dbtype=tvshow&amp;&amp;dbinfo=$INFO[ListItem.TVShowTitle]</value>
		<value condition="Container.Content(seasons) + !String.IsEmpty(ListItem(1).DBID)">plugin://plugin.get.cast?mode=title&amp;&amp;dbtype=tvshow&amp;&amp;dbinfo=$INFO[ListItem(1).TVShowTitle]</value>
		<value condition="Container.Content(seasons) + !String.IsEmpty(ListItem(2).DBID)">plugin://plugin.get.cast?mode=title&amp;&amp;dbtype=tvshow&amp;&amp;dbinfo=$INFO[ListItem(2).TVShowTitle]</value>
	</variable>
	<variable name="View54_NextUp_Content">
		<value condition="Container.Content(seasons) + Integer.IsGreater(Window(home).Property(UnwatchedEpisodes),0) + String.StartsWith(ListItem.Path,plugin://plugin.video.embycon)">plugin://plugin.video.embycon/?mode=GET_CONTENT&amp;media_type=Episodes&amp;url=%7Bserver%7D%2Femby%2FShows%2FNextUp%3FuserId%3D%7Buserid%7D%26Limit%3D%7BItemLimit%7D%26Filters%3D%7Bfield_filters%7D%26format%3Djson%26ImageTypeLimit%3D1%26IsMissing%3DFalse%26SeriesId%3D$INFO[Window(home).Property(EmbyID)]</value>
		<value condition="Container.Content(seasons) + Integer.IsGreater(Window(home).Property(UnwatchedEpisodes),0) + !String.IsEmpty(Window(home).Property(TVShowDBID))">videodb://inprogresstvshows/$INFO[Window(home).Property(TVShowDBID)]/-2/?tvshowid=$INFO[Window(home).Property(TVShowDBID)]</value>
	</variable>
	<variable name="InfoDialog_NextUp_Content">
		<value condition="Integer.IsGreater(Window(home).Property(UnwatchedEpisodes),0) + String.StartsWith(ListItem.Path,plugin://plugin.video.embycon)">plugin://plugin.video.embycon/?mode=GET_CONTENT&amp;media_type=Episodes&amp;url=%7Bserver%7D%2Femby%2FShows%2FNextUp%3FuserId%3D%7Buserid%7D%26Limit%3D%7BItemLimit%7D%26Filters%3D%7Bfield_filters%7D%26format%3Djson%26ImageTypeLimit%3D1%26IsMissing%3DFalse%26SeriesId%3D$INFO[ListItem.Property(id)]</value>
		<value condition="Integer.IsGreater(Window(home).Property(UnwatchedEpisodes),0) + !String.IsEmpty(ListItem.DBID)">videodb://inprogresstvshows/$INFO[ListItem.DBID]/-2/?tvshowid=$INFO[ListItem.DBID]</value>
	</variable>
	<variable name="InfoDialog_MoreLikeThis_Content">
		<value condition="String.StartsWith(ListItem.Path,plugin://plugin.video.embycon)">plugin://plugin.video.embycon/?mode=GET_CONTENT&amp;media_type=Movies&amp;url=%7Bserver%7D%2Femby%2FItems%2F$INFO[ListItem.Property(id)]%2FSimilar%3FuserId%3D%7Buserid%7D%26Limit%3D%7BItemLimit%7D%26format%3Djson%26ImageTypeLimit%3D1%26IsMissing%3DFalse%26Filters%3D%7Bfield_filters%7D</value>
		<value condition="String.IsEqual(ListItem.DBType,movie) + !String.IsEmpty(ListItem.IMDBNumber)">plugin://script.skin.helper.widgets/?action=similar&amp;mediatype=movies&amp;imdbid=$INFO[ListItem.IMDBNumber]</value>
		<value>plugin://script.skin.helper.widgets/?action=similarshows&amp;imdbid=$INFO[ListItem.IMDBNumber]</value>
	</variable>
	<!-- Embcon widget vars -->
	<variable name="EmbyConLabel">
		<value condition="!Skin.HasSetting(HideEmbyConLabel)"> [COLOR FF505050](EmbyCon)[/COLOR]</value>
	</variable>
	<variable name="EmbyCon_RecentEpisodes_Mainlabel">
		<value condition="!String.IsEmpty(ListItem.Episode)">$INFO[ListItem.TVShowTitle]</value>
		<value>$INFO[ListItem.Season,S,:]$INFO[ListItem.Episode,E, - ]$INFO[ListItem.Title]</value>
	</variable>
	<variable name="EmbyCon_RecentEpisodes_Sublabel">
		<value condition="!String.IsEmpty(ListItem.Episode)">$INFO[ListItem.Season,S,:]$INFO[ListItem.Episode,E, - ]$INFO[ListItem.Title]</value>
		<value>$INFO[ListItem.Year]</value>
	</variable>
	<variable name="HeaderCustomDeviceName">
		<value condition="Skin.HasSetting(CustomDeviceName) + !String.IsEmpty(Skin.String(CustomDeviceName_label))">$INFO[Skin.String(CustomDeviceName_label)]</value>
		<value>embuary</value>
	</variable>
	<variable name="ContainerContentPrefix">
		<value condition="String.StartsWith(Container.Folderpath,plugin://plugin.video.embycon) | Window.IsVisible(1160) | Window.IsVisible(1161) | Window.IsVisible(1162) | Window.IsVisible(1163) | Window.IsVisible(1164) | Window.IsVisible(1165) | Window.IsVisible(1166) | Window.IsVisible(1167) | Window.IsVisible(1168) | Window.IsVisible(1169)">EmbyCon - </value>
	</variable>
	<variable name="ContainerContent">
		<value condition="Window.IsVisible(dialogpvrinfo.xml)">$LOCALIZE[19047]</value>
		<value condition="Window.IsVisible(addoninformation)">$LOCALIZE[24003]</value>
		<value condition="Window.IsVisible(musicinformation) + String.IsEqual(ListItem.DBType,album)">$LOCALIZE[10523]</value>
		<value condition="Window.IsVisible(musicinformation) + String.IsEqual(ListItem.DBType,artist)">$LOCALIZE[21891]</value>
		<value condition="Window.IsVisible(movieinformation) + String.IsEqual(ListItem.DBType,tvshow)">$LOCALIZE[20351]</value>
		<value condition="Window.IsVisible(movieinformation) + String.IsEqual(ListItem.DBType,movie)">$LOCALIZE[10524]</value>
		<value condition="Window.IsVisible(movieinformation) + String.IsEqual(ListItem.DBType,episode)">$LOCALIZE[20352]</value>
		<value condition="Window.IsVisible(script-globalsearch.xml) | Window.IsVisible(script-globalsearch-main.xml)">$LOCALIZE[283]</value>
		<value condition="String.StartsWith(Container.FolderPath,plugin://plugin.video.emby/) + String.Contains(Container.FolderPath,type=homevideos)">$LOCALIZE[31187]</value>
		<value condition="Window.IsVisible(1114)">$LOCALIZE[135]</value>
		<value condition="Window.IsVisible(1130)">$INFO[Window(home).Property(emby.nodes.0.title)]</value>
		<value condition="Window.IsVisible(1131)">$INFO[Window(home).Property(emby.nodes.1.title)]</value>
		<value condition="Window.IsVisible(1132)">$INFO[Window(home).Property(emby.nodes.2.title)]</value>
		<value condition="Window.IsVisible(1133)">$INFO[Window(home).Property(emby.nodes.3.title)]</value>
		<value condition="Window.IsVisible(1134)">$INFO[Window(home).Property(emby.nodes.4.title)]</value>
		<value condition="Window.IsVisible(1135)">$INFO[Window(home).Property(emby.nodes.5.title)]</value>
		<value condition="Window.IsVisible(1136)">$INFO[Window(home).Property(emby.nodes.6.title)]</value>
		<value condition="Window.IsVisible(1137)">$INFO[Window(home).Property(emby.nodes.7.title)]</value>
		<value condition="Window.IsVisible(1138)">$INFO[Window(home).Property(emby.nodes.8.title)]</value>
		<value condition="Window.IsVisible(1139)">$INFO[Window(home).Property(emby.nodes.9.title)]</value>
		<value condition="Window.IsVisible(1160)">$INFO[Window(home).Property(plugin.video.embycon-view_item.0.name)]</value>
		<value condition="Window.IsVisible(1161)">$INFO[Window(home).Property(plugin.video.embycon-view_item.1.name)]</value>
		<value condition="Window.IsVisible(1162)">$INFO[Window(home).Property(plugin.video.embycon-view_item.2.name)]</value>
		<value condition="Window.IsVisible(1163)">$INFO[Window(home).Property(plugin.video.embycon-view_item.3.name)]</value>
		<value condition="Window.IsVisible(1164)">$INFO[Window(home).Property(plugin.video.embycon-view_item.4.name)]</value>
		<value condition="Window.IsVisible(1165)">$INFO[Window(home).Property(plugin.video.embycon-view_item.5.name)]</value>
		<value condition="Window.IsVisible(1166)">$INFO[Window(home).Property(plugin.video.embycon-view_item.6.name)]</value>
		<value condition="Window.IsVisible(1167)">$INFO[Window(home).Property(plugin.video.embycon-view_item.7.name)]</value>
		<value condition="Window.IsVisible(1168)">$INFO[Window(home).Property(plugin.video.embycon-view_item.8.name)]</value>
		<value condition="Window.IsVisible(1169)">$INFO[Window(home).Property(plugin.video.embycon-view_item.9.name)]</value>
		<value condition="String.StartsWith(Container.FolderPath,videodb://movies/genres/)">$INFO[Container.Foldername]</value>
		<value condition="String.StartsWith(Container.FolderPath,videodb://tvshows/genres/)">$INFO[Container.Foldername]</value>
		<value condition="String.StartsWith(Container.FolderPath,plugin://script.skin.helper.widgets/?action=browsegenres)">$LOCALIZE[135]</value>
		<value condition="Window.IsVisible(script-NextAired-TVGuide2.xml)">$LOCALIZE[31154]</value>
		<value condition="Window.IsVisible(script-NextAired-TVGuide.xml)">$LOCALIZE[31154]</value>
		<value condition="Window.IsVisible(tvtimerrules)">$LOCALIZE[19138]</value>
		<value condition="Window.IsVisible(tvtimers)">$LOCALIZE[19040]</value>
		<value condition="Window.IsVisible(subtitlesearch)">$LOCALIZE[287]</value>
		<value condition="Window.IsVisible(pictures)">$LOCALIZE[1213]</value>
		<value condition="Window.IsVisible(EventLog.xml)">$LOCALIZE[31108]</value>
		<value condition="Window.IsVisible(script-nextup-notification-PostPlayInfo.xml)">$LOCALIZE[31079]</value>
		<value condition="Window.IsVisible(musicplaylisteditor)">$LOCALIZE[10503]</value>
		<value condition="Window.IsVisible(weather)">$LOCALIZE[8]</value>
		<value condition="Window.IsVisible(favourites)">$LOCALIZE[1036]</value>
		<value condition="Window.IsVisible(smartplaylisteditor)">$LOCALIZE[10136]</value>
		<value condition="Window.IsVisible(DialogPVRChannelManager.xml)">$LOCALIZE[19199]</value>
		<value condition="Window.IsVisible(pvrgroupmanager)">$LOCALIZE[19048]</value>
		<value condition="Window.IsVisible(skinsettings)">$LOCALIZE[31058]</value>
		<value condition="Window.IsVisible(filemanager)">$LOCALIZE[7]</value>
		<value condition="Window.IsVisible(musicplaylist)">$LOCALIZE[10500]</value>
		<value condition="Window.IsVisible(videoplaylist)">$LOCALIZE[10028]</value>
		<value condition="Window.IsVisible(videobookmarks)">$LOCALIZE[298]</value>
		<value condition="Window.IsVisible(systeminfo)">$LOCALIZE[138]</value>
		<value condition="Window.IsVisible(profiles)">$LOCALIZE[10130]</value>
		<value condition="Window.IsVisible(DialogFullScreenInfo.xml) + VideoPlayer.Content(livetv)">$LOCALIZE[19166]</value>
		<value condition="Window.IsVisible(DialogFullScreenInfo.xml) + VideoPlayer.Content(movies)">$LOCALIZE[10524]</value>
		<value condition="Window.IsVisible(DialogFullScreenInfo.xml) + VideoPlayer.Content(episodes)">$LOCALIZE[20352]</value>
		<value condition="Window.IsVisible(DialogAddonSettings.xml)">$INFO[Control.GetLabel(2)]</value>
		<value condition="Window.IsVisible(SettingsCategory.xml)">$LOCALIZE[5]: $INFO[Control.GetLabel(2)]</value>
		<value condition="Window.IsVisible(Settings.xml)">$LOCALIZE[5]</value>
		<value condition="Window.IsVisible(1120)">$LOCALIZE[342]</value>
		<value condition="Window.IsVisible(1121)">$LOCALIZE[20343]</value>
		<value condition="Window.IsVisible(1122)">$LOCALIZE[2]</value>
		<value condition="Window.IsVisible(1123)">$LOCALIZE[24001]</value>
		<value condition="Window.IsVisible(1124)">$VAR[PVRLabel]</value>
		<value condition="!String.IsEmpty(Container.ShowTitle)">$INFO[Container.ShowTitle]</value>
		<value condition="Window.IsVisible(MyPVRGuide.xml)">$LOCALIZE[19069]</value>
		<value condition="Window.IsVisible(MyPVRRecordings.xml)">$LOCALIZE[19017]</value>
		<value condition="Container.Content(sets)">$LOCALIZE[31169]</value>
		<value condition="Container.Content(movies)">$LOCALIZE[342]</value>
		<value condition="Container.Content(tvshows)">$LOCALIZE[20343]</value>
		<value condition="Container.Content(seasons)">$LOCALIZE[33054]</value>
		<value condition="Container.Content(artists)">$LOCALIZE[133]</value>
		<value condition="Container.Content(songs)">$LOCALIZE[134]</value>
		<value condition="Container.Content(albums)">$LOCALIZE[132]</value>
		<value condition="String.StartsWith(Container.FolderPath,videodb://movies)">$LOCALIZE[342]</value>
		<value condition="String.StartsWith(Container.FolderPath,videodb://tvshows)">$LOCALIZE[20343]</value>
		<value condition="String.StartsWith(Container.FolderPath,musicdb://)">$LOCALIZE[2]</value>
		<value condition="Window.IsVisible(mymusicnav.xml)">$LOCALIZE[2]</value>
		<value condition="Window.IsVisible(myvideonav.xml)">$LOCALIZE[3]</value>
		<value>$INFO[Container.Foldername]</value>
	</variable>
	<variable name="ContainerCountLabel">
		<value condition="Window.IsVisible(script-globalsearch.xml)">$INFO[Container.NumItems]</value>
		<value condition="Container.Content(seasons) + !Window.IsVisible(movieinformation)">$INFO[Container.NumItems]</value>
		<value condition="Container.Content(episodes) + !Window.IsVisible(movieinformation)">$INFO[Container.NumItems]</value>
		<value condition="String.StartsWith(Container.FolderPath,pvr://) + !Window.IsVisible(dialogpvrinfo.xml)">$INFO[Container.NumItems]</value>
		<value condition="Window.IsVisible(mypvrguide.xml) + !Window.IsVisible(dialogpvrinfo.xml)">$INFO[Container.NumItems]</value>
		<value condition="Container.Content(sets) + !Window.IsVisible(movieinformation)">$INFO[Container.NumItems]</value>
		<value condition="Container.Content(movies) + !Window.IsVisible(movieinformation)">$INFO[Container.NumItems]</value>
		<value condition="Container.Content(tvshows) + !Window.IsVisible(movieinformation)">$INFO[Container.NumItems]</value>
		<value condition="Container.Content(albums) + !Window.IsVisible(musicinformation)">$INFO[Container.NumItems]</value>
		<value condition="Container.Content(songs) + !Window.IsVisible(musicinformation)">$INFO[Container.NumItems]</value>
		<value condition="Container.Content(artists) + !Window.IsVisible(musicinformation)">$INFO[Container.NumItems]</value>
	</variable>
	<!-- Custom widgets -->
	<variable name="UserWidget1_content">
		<value condition="Skin.HasSetting(UserWidget1)">$INFO[Skin.String(UserWidget1_path)]</value>
	</variable>
	<variable name="UserWidget2_content">
		<value condition="Skin.HasSetting(UserWidget2)">$INFO[Skin.String(UserWidget2_path)]</value>
	</variable>
	<variable name="UserWidget3_content">
		<value condition="Skin.HasSetting(UserWidget3)">$INFO[Skin.String(UserWidget3_path)]</value>
	</variable>
	<variable name="UserWidget4_content">
		<value condition="Skin.HasSetting(UserWidget4)">$INFO[Skin.String(UserWidget4_path)]</value>
	</variable>
	<variable name="UserWidget5_content">
		<value condition="Skin.HasSetting(UserWidget5)">$INFO[Skin.String(UserWidget5_path)]</value>
	</variable>
	<variable name="UserWidget6_content">
		<value condition="Skin.HasSetting(UserWidget6)">$INFO[Skin.String(UserWidget6_path)]</value>
	</variable>
	<variable name="UserMovieWidget1_content">
		<value condition="Skin.HasSetting(UserMovieWidget1)">$INFO[Skin.String(UserMovieWidget1_path)]</value>
	</variable>
	<variable name="UserMovieWidget2_content">
		<value condition="Skin.HasSetting(UserMovieWidget2)">$INFO[Skin.String(UserMovieWidget2_path)]</value>
	</variable>
	<variable name="UserMovieWidget3_content">
		<value condition="Skin.HasSetting(UserMovieWidget3)">$INFO[Skin.String(UserMovieWidget3_path)]</value>
	</variable>
	<variable name="UserMovieWidget4_content">
		<value condition="Skin.HasSetting(UserMovieWidget4)">$INFO[Skin.String(UserMovieWidget4_path)]</value>
	</variable>
	<variable name="UserMovieWidget5_content">
		<value condition="Skin.HasSetting(UserMovieWidget5)">$INFO[Skin.String(UserMovieWidget5_path)]</value>
	</variable>
	<variable name="UserMovieWidget6_content">
		<value condition="Skin.HasSetting(UserMovieWidget6)">$INFO[Skin.String(UserMovieWidget6_path)]</value>
	</variable>
	<variable name="UserTVShowWidget1_content">
		<value condition="Skin.HasSetting(UserTVShowWidget1)">$INFO[Skin.String(UserTVShowWidget1_path)]</value>
	</variable>
	<variable name="UserTVShowWidget2_content">
		<value condition="Skin.HasSetting(UserTVShowWidget2)">$INFO[Skin.String(UserTVShowWidget2_path)]</value>
	</variable>
	<variable name="UserTVShowWidget3_content">
		<value condition="Skin.HasSetting(UserTVShowWidget3)">$INFO[Skin.String(UserTVShowWidget3_path)]</value>
	</variable>
	<variable name="UserTVShowWidget4_content">
		<value condition="Skin.HasSetting(UserTVShowWidget4)">$INFO[Skin.String(UserTVShowWidget4_path)]</value>
	</variable>
	<variable name="UserTVShowWidget5_content">
		<value condition="Skin.HasSetting(UserTVShowWidget5)">$INFO[Skin.String(UserTVShowWidget5_path)]</value>
	</variable>
	<variable name="UserTVShowWidget6_content">
		<value condition="Skin.HasSetting(UserTVShowWidget6)">$INFO[Skin.String(UserTVShowWidget6_path)]</value>
	</variable>
	<variable name="UserMusicWidget1_content">
		<value condition="Skin.HasSetting(UserMusicWidget1)">$INFO[Skin.String(UserMusicWidget1_path)]</value>
	</variable>
	<variable name="UserMusicWidget2_content">
		<value condition="Skin.HasSetting(UserMusicWidget2)">$INFO[Skin.String(UserMusicWidget2_path)]</value>
	</variable>
	<variable name="UserMusicWidget3_content">
		<value condition="Skin.HasSetting(UserMusicWidget3)">$INFO[Skin.String(UserMusicWidget3_path)]</value>
	</variable>
	<variable name="UserMusicWidget4_content">
		<value condition="Skin.HasSetting(UserMusicWidget4)">$INFO[Skin.String(UserMusicWidget4_path)]</value>
	</variable>
	<variable name="UserMusicWidget5_content">
		<value condition="Skin.HasSetting(UserMusicWidget5)">$INFO[Skin.String(UserMusicWidget5_path)]</value>
	</variable>
	<variable name="UserMusicWidget6_content">
		<value condition="Skin.HasSetting(UserMusicWidget6)">$INFO[Skin.String(UserMusicWidget6_path)]</value>
	</variable>
	<!-- background -->
	<variable name="BackgroundColordiffuse">
		<value condition="String.IsEqual(Skin.String(BackgroundAlpha),0) | String.IsEmpty(Skin.String(BackgroundAlpha))">ff141414</value>
		<value condition="String.IsEqual(Skin.String(BackgroundAlpha),1)">bf141414</value>
		<value condition="String.IsEqual(Skin.String(BackgroundAlpha),2)">80141414</value>
		<value condition="String.IsEqual(Skin.String(BackgroundAlpha),3)">40141414</value>
	</variable>
	<variable name="BackgroundSource">
		<!-- global static -->
		<value condition="Skin.HasSetting(ShowStaticBackgroundImage) + Skin.HasSetting(ShowStaticBackgroundImageGlobally) + !String.IsEmpty(Skin.String(StaticBackgroundImage))">$INFO[Skin.String(StaticBackgroundImage)]</value>
		<!-- based on listitems -->
		<value condition="Window.IsVisible(script-script.extendedinfo-DialogInfo.xml)">$INFO[Container(750).ListItemAbsolute(0).Icon]</value>
		<value condition="[Window.IsVisible(script-NextAired-TVGuide2.xml) | Window.IsVisible(script-NextAired-TVGuide.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + Control.HasFocus(200)">$INFO[Container(200).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsVisible(script-NextAired-TVGuide2.xml) | Window.IsVisible(script-NextAired-TVGuide.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + Control.HasFocus(201)">$INFO[Container(201).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsVisible(script-NextAired-TVGuide2.xml) | Window.IsVisible(script-NextAired-TVGuide.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + Control.HasFocus(202)">$INFO[Container(202).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsVisible(script-NextAired-TVGuide2.xml) | Window.IsVisible(script-NextAired-TVGuide.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + Control.HasFocus(203)">$INFO[Container(203).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsVisible(script-NextAired-TVGuide2.xml) | Window.IsVisible(script-NextAired-TVGuide.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + Control.HasFocus(204)">$INFO[Container(204).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsVisible(script-NextAired-TVGuide2.xml) | Window.IsVisible(script-NextAired-TVGuide.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + Control.HasFocus(205)">$INFO[Container(205).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsVisible(script-NextAired-TVGuide2.xml) | Window.IsVisible(script-NextAired-TVGuide.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + Control.HasFocus(206)">$INFO[Container(206).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsVisible(script-NextAired-TVGuide2.xml) | Window.IsVisible(script-NextAired-TVGuide.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + Control.HasFocus(207)">$INFO[Container(207).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsVisible(script-NextAired-TVGuide2.xml) | Window.IsVisible(script-NextAired-TVGuide.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + Control.HasFocus(208)">$INFO[Container(208).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsVisible(script-NextAired-TVGuide2.xml) | Window.IsVisible(script-NextAired-TVGuide.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + Control.HasFocus(209)">$INFO[Container(209).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsVisible(script-NextAired-TVGuide2.xml) | Window.IsVisible(script-NextAired-TVGuide.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + Control.HasFocus(210)">$INFO[Container(210).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsVisible(script-NextAired-TVGuide2.xml) | Window.IsVisible(script-NextAired-TVGuide.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + Control.HasFocus(211)">$INFO[Container(211).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsVisible(script-NextAired-TVGuide2.xml) | Window.IsVisible(script-NextAired-TVGuide.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + Control.HasFocus(212)">$INFO[Container(212).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsVisible(script-NextAired-TVGuide2.xml) | Window.IsVisible(script-NextAired-TVGuide.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + Control.HasFocus(213)">$INFO[Container(213).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsVisible(script-NextAired-TVGuide2.xml) | Window.IsVisible(script-NextAired-TVGuide.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + Control.HasFocus(214)">$INFO[Container(214).ListItem.Property(Fanart)]</value>
		<value condition="[Window.IsVisible(script-NextAired-TVGuide2.xml) | Window.IsVisible(script-NextAired-TVGuide.xml)] + !String.IsEmpty(Window(home).Property(TVGuide.BackgroundFanart)) + Control.HasFocus(215)">$INFO[Container(215).ListItem.Property(Fanart)]</value>
		<value condition="!String.IsEmpty(Window.Property(background))">$INFO[Window.Property(background)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<!-- static for non listitems -->
		<value condition="Skin.HasSetting(ShowStaticBackgroundImage) + !String.IsEmpty(Skin.String(StaticBackgroundImage))">$INFO[Skin.String(StaticBackgroundImage)]</value>
		<!-- non listitem fanarts -->
		<value condition="[String.StartsWith(Container.Folderpath,plugin://plugin.video.embycon) | Window.IsVisible(1160) | Window.IsVisible(1161) | Window.IsVisible(1162) | Window.IsVisible(1163) | Window.IsVisible(1164) | Window.IsVisible(1165) | Window.IsVisible(1166) | Window.IsVisible(1167) | Window.IsVisible(1168) | Window.IsVisible(1169)] + !String.IsEmpty(Window(home).Property(plugin.video.embycon-random-gb))">$INFO[Window(home).Property(plugin.video.embycon-random-gb)]</value>
		<value condition="[Window.IsVisible(1122) | Container.Content(musicvideos) | Window.IsVisible(mymusicnav.xml)] + !String.IsEmpty(Window(home).Property(SkinHelper.AllMusicBackground))">$INFO[Window(home).Property(SkinHelper.AllMusicBackground)]</value>
		<value condition="[Window.IsVisible(1121) | String.StartsWith(Container.FolderPath,videodb://tvshows)] + !String.IsEmpty(Window(home).Property(SkinHelper.AllTvShowsBackground))">$INFO[Window(home).Property(SkinHelper.AllTvShowsBackground)]</value>
		<value condition="[Window.IsVisible(1120) | String.StartsWith(Container.FolderPath,videodb://movies)]  + !String.IsEmpty(Window(home).Property(SkinHelper.AllMoviesBackground))">$INFO[Window(home).Property(SkinHelper.AllMoviesBackground)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(SkinHelper.AllVideosBackground))">$INFO[Window(home).Property(SkinHelper.AllVideosBackground)]</value>
		<value condition="!String.IsEmpty(Window(home).Property(SkinHelper.AllMoviesBackground))">$INFO[Window(home).Property(SkinHelper.AllMoviesBackground)]</value>
		<value>$INFO[Window(home).Property(plugin.video.embycon-random-gb)]</value>
	</variable>
	<variable name="FakeButtonAddonInfo13">
		<value condition="String.EndsWith(Control.GetLabel(13),(*))">$LOCALIZE[19074]</value>
		<value>$LOCALIZE[351]</value>
	</variable>
	<variable name="PartyModeButton">
		<value condition="MusicPartyMode.Enabled">$LOCALIZE[588]</value>
		<value>$LOCALIZE[589]</value>
	</variable>
	<variable name="ListItemClearlogo">
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.clearlogo))">$INFO[ListItem.Art(tvshow.clearlogo)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(clearlogo))">$INFO[ListItem.Art(clearlogo)]</value>
	</variable>
	<variable name="GlobalSearchIconTVShows">
		<value condition="!String.IsEmpty(ListItem.Property(art(clearart)))">$INFO[ListItem.Property(art(landscape))]</value>
		<value>ListItem.Art(fanart)</value>
	</variable>
	<variable name="IconBanner">
		<value condition="!String.IsEmpty(ListItem.Art(banner))">$INFO[ListItem.Art(banner)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.banner))">$INFO[ListItem.Art(tvshow.banner)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.fanart))">$INFO[ListItem.Art(tvshow.fanart)]</value>
	</variable>
	<variable name="IconLandscape">
		<value condition="Window.IsVisible(videobookmarks) + !String.StartsWith(ListItem.Icon,Default)">$INFO[ListItem.Icon]</value>
		<value condition="String.StartsWith(ListItem.Path,pvr://) + !String.StartsWith(ListItem.Icon,Default)">$INFO[ListItem.Icon]</value>
		<value condition="[Window.IsVisible(videoplaylist) | Window.IsVisible(movieinformation) | Window.IsVisible(favourites)] + [String.IsEqual(ListItem.DBType,episode) | !String.IsEmpty(ListItem.Episode)] + !String.IsEmpty(ListItem.Art(thumb)) + !String.StartsWith(ListItem.Art(thumb),Default)">$INFO[ListItem.Art(thumb)]</value>
		<value condition="[String.IsEqual(ListItem.DBType,tvshow) | Container.Content(tvshows)] + !String.IsEmpty(ListItem.Art(tvshow.landscape))">$INFO[ListItem.Art(tvshow.landscape)]</value>
		<value condition="[String.IsEqual(ListItem.DBType,tvshow) | Container.Content(tvshows)] + !String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
		<value condition="[String.IsEqual(ListItem.DBType,tvshow) | Container.Content(tvshows)] + !String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value>
		<value condition="[String.IsEqual(ListItem.DBType,episode) | Container.Content(episodes)] + Window.IsMedia + !String.IsEmpty(ListItem.Art(thumb)) + !String.StartsWith(ListItem.Art(thumb),Default)">$INFO[ListItem.Art(thumb)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.landscape))">$INFO[ListItem.Art(tvshow.landscape)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(landscape))">$INFO[ListItem.Art(landscape)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.fanart))">$INFO[ListItem.Art(tvshow.fanart)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(fanart)) + [!String.IsEmpty(ListItem.DBType) | String.StartsWith(ListItem.Path,plugin://plugin.video.embycon) | Window.IsVisible(addonbrowser) | Window.IsVisible(programs)]">$INFO[ListItem.Art(fanart)]</value>
		<value condition="!String.IsEmpty(ListItem.Property(fanart))">$INFO[ListItem.Property(fanart)]</value>
		<value condition="!String.StartsWith(ListItem.Icon,Default)">$INFO[ListItem.Icon]</value>
	</variable>
	<variable name="IconPoster">
		<value condition="!String.IsEmpty(ListItem.Art(poster))">$INFO[ListItem.Art(poster)]</value>
		<value condition="!String.IsEmpty(ListItem.Art(tvshow.poster))">$INFO[ListItem.Art(tvshow.poster)]</value>
		<value condition="!String.StartsWith(ListItem.Icon,Default)">$INFO[ListItem.Icon]</value>
	</variable>
	<variable name="IconSquare">
		<value condition="!String.IsEmpty(ListItem.Art(thumb)) + !String.StartsWith(ListItem.Art(thumb),Default)">$INFO[ListItem.Art(thumb)]</value>
		<value condition="!String.StartsWith(ListItem.Icon,Default)">$INFO[ListItem.Icon]</value>
	</variable>
	<variable name="PVRWidgetMainListLabel">
		<value condition="!String.IsEmpty(ListItem.Title)">$INFO[ListItem.Title]</value>
		<value>$INFO[ListItem.Channelname]</value>
	</variable>
	<variable name="MainListLabel">
		<value condition="String.IsEqual(ListItem.DBType,season) + String.StartsWith(ListItem.Path,plugin://plugin.video.embycon) + String.IsEqual(ListItem.Label,All)">$LOCALIZE[20366]</value>
		<value condition="String.IsEqual(ListItem.Filename,stream) + String.Contains(ListItem.Filenameandpath,/emby/videos/)">$LOCALIZE[31186]</value>
		<value condition="Window.IsVisible(script-NextAired-TVGuide.xml)">$INFO[ListItem.Property(NextDate),, - ]$INFO[ListItem.Label]$INFO[ListItem.Property(ShortTime), (,)]</value>
		<value condition=" Window.IsVisible(script-NextAired-TVGuide2.xml)">$INFO[ListItem.Label]$INFO[ListItem.Property(ShortTime), (,)]</value>
		<value condition="String.StartsWith(ListItem.Path,pvr://) + !String.IsEmpty(ListItem.Title)">$INFO[ListItem.Title]</value>
		<value condition="String.StartsWith(ListItem.Path,pvr://)">$INFO[ListItem.Label]</value>
		<value condition="String.IsEqual(ListItem.DBType,episode)">$INFO[ListItem.Season,S,:]$INFO[ListItem.Episode,E, - ]$INFO[ListItem.Title]</value>
		<value condition="String.IsEqual(ListItem.DBType,season) + !String.IsEmpty(ListItem.Season)">$INFO[ListItem.Season,$LOCALIZE[20373] ]</value>
		<value condition="String.IsEqual(ListItem.DBType,song) + !String.IsEmpty(ListItem.title)">$INFO[ListItem.Tracknumber,,. ]$INFO[ListItem.Title]</value>
		<value condition="Container.Content(songs) + Integer.IsGreater(ListItem.Tracknumber,0) + !String.IsEmpty(ListItem.title)">$INFO[ListItem.Tracknumber,,. ]$INFO[ListItem.Title]</value>
		<value condition="Container.Content(songs) + !String.IsEmpty(ListItem.title)">$INFO[ListItem.Title]</value>
		<value>$INFO[ListItem.Label]</value>
	</variable>
	<variable name="SubListLabel">
		<value condition="Window.IsVisible(script-NextAired-TVGuide.xml)">$INFO[ListItem.Property(NextSeasonNumber),S,]$INFO[ListItem.Property(NextEpisodeNumber),:E]$INFO[ListItem.Property(NextTitle), - ]</value>
		<value condition="Window.IsVisible(script-NextAired-TVGuide2.xml)">$INFO[ListItem.Property(NextSeasonNumber),S,]$INFO[ListItem.Property(NextEpisodeNumber),:E]$INFO[ListItem.Property(NextTitle), - ]</value>
		<value condition="String.StartsWith(ListItem.Path,pvr://)">$INFO[ListItem.Label]</value>
		<value condition="String.IsEqual(ListItem.DBType,episode)">$INFO[ListItem.TvShowTitle]</value>
		<value condition="String.IsEqual(ListItem.DBType,season)">$INFO[ListItem.TvShowTitle]</value>
		<value condition="String.IsEqual(ListItem.DBType,movie)">$INFO[ListItem.Year]</value>
		<value condition="String.IsEqual(ListItem.DBType,set)">[CAPITALIZE]$LOCALIZE[31189][/CAPITALIZE]</value>
		<value condition="String.IsEqual(ListItem.DBType,tvshow)">$INFO[ListItem.Year]</value>
		<value condition="String.IsEqual(ListItem.DBType,album) + !String.IsEmpty(ListItem.AlbumArtist)">$INFO[ListItem.AlbumArtist]</value>
		<value condition="String.IsEqual(ListItem.DBType,album)">$INFO[ListItem.Artist]</value>
		<value condition="String.IsEqual(ListItem.DBType,song)">$INFO[ListItem.Artist]</value>
		<value condition="String.IsEqual(ListItem.DBType,artist)">$LOCALIZE[557]</value>
		<value condition="Window.IsVisible(addonbrowser)">$INFO[ListItem.AddonType]</value>
		<value condition="Container.Content(images)">$INFO[ListItem.size]</value>
		<value condition="Container.Content(songs)">$INFO[ListItem.Artist]</value>
		<value condition="Container.Content(albums) + !String.IsEmpty(ListItem.AlbumArtist)">$INFO[ListItem.AlbumArtist]</value>
		<value condition="Container.Content(albums)">$INFO[ListItem.Artist]</value>
		<value condition="Container.Content(tvshow)">$INFO[ListItem.Year]</value>
		<value condition="Container.Content(movie)">$INFO[ListItem.Year]</value>
		<value condition="Container.Content(season)">$INFO[ListItem.TvShowTitle]</value>
		<value condition="Container.Content(episode)">$INFO[ListItem.TvShowTitle]</value>
		<value condition="Container.Content(actors)">$LOCALIZE[20337]</value>
		<value condition="Container.Content(directors)">$LOCALIZE[20339]</value>
		<value condition="String.StartsWith(ListItem.Path,plugin://plugin.audio.prime_music) + String.Contains(ListItem.Filenameandpath,playTrack)">$INFO[ListItem.Artist]</value>
	</variable>
	<variable name="RightListLabel">
		<value condition="Window.IsVisible(addonbrowser)">$INFO[ListItem.Label2]</value>
		<value condition="!String.IsEmpty(ListItem.Duration)">$VAR[DurationMinutes]</value>
		<value condition="String.IsEqual(ListItem.DBType,album)">$INFO[ListItem.Year]</value>
		<value condition="Container.Content(tvshows) + !String.IsEmpty(ListItem.Property(TotalEpisodes))">$INFO[ListItem.Property(TotalEpisodes),, $LOCALIZE[20453]]</value>
		<value condition="Container.Content(albums)">$INFO[ListItem.Year]</value>
		<value condition="Container.Content(songs)">$INFO[ListItem.Duration]</value>
	</variable>
	<variable name="RightListLabel2">
		<value condition="Container.Content(tvshows) + !String.IsEmpty(ListItem.Property(TotalSeasons))">$INFO[ListItem.Property(TotalSeasons),, $LOCALIZE[36905]]</value>
		<value condition="String.IsEqual(ListItem.DBType,album)">$INFO[ListItem.Genre]</value>
		<value condition="Container.Content(albums)">$INFO[ListItem.Genre]</value>
		<value condition="!String.IsEmpty(ListItem.Duration) + !String.IsEmpty(ListItem.EndTimeResume)">$INFO[ListItem.EndTimeResume,$LOCALIZE[31037] ]</value>
		<value condition="!String.IsEmpty(ListItem.Duration) + !String.IsEmpty(ListItem.EndTime)">$INFO[ListItem.EndTime,$LOCALIZE[31037] ]</value>
	</variable>
	<variable name="VisibleContainer">
		<value condition="Control.IsVisible(50)">50</value>
		<value condition="Control.IsVisible(51)">51</value>
		<value condition="Control.IsVisible(52)">52</value>
		<value condition="Control.IsVisible(53)">53</value>
		<value condition="Control.IsVisible(54)">54</value>
		<value condition="Control.IsVisible(55)">55</value>
	</variable>
	<variable name="ListItemResolution">
		<value condition="String.IsEqual(ListItem.VideoResolution,4K)">4K</value>
		<value condition="String.IsEqual(ListItem.VideoResolution,1080)">1080p</value>
		<value condition="String.IsEqual(ListItem.VideoResolution,720)">720p</value>
		<value condition="String.IsEqual(ListItem.VideoResolution,480)">480p</value>
		<value>$INFO[ListItem.VideoResolution]</value>
	</variable>
	<variable name="ListItemEpisodeName">
		<value condition="!String.IsEmpty(ListItem.EpisodeName)">$INFO[ListItem.EpisodeName]</value>
		<value condition="!String.IsEmpty(ListItem.Genre) + !Window.IsVisible(pvrguideinfo) + !Control.IsVisible(57)">$LOCALIZE[515]: $INFO[ListItem.Genre]</value>
		<value>[COLOR softgrey]$LOCALIZE[31156][/COLOR]</value>
	</variable>
	<variable name="PlayerEpisodeName">
		<value condition="!String.IsEmpty(VideoPlayer.EpisodeName)">$INFO[VideoPlayer.EpisodeName]</value>
		<value condition="!String.IsEmpty(VideoPlayer.Genre)">$LOCALIZE[515]: $INFO[VideoPlayer.Genre]</value>
		<value>[COLOR softgrey]$LOCALIZE[31156][/COLOR]</value>
	</variable>
	<variable name="PlayerDiscArt">
		<value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.Player.Art.DiscArt))">$INFO[Window(Home).Property(SkinHelper.Player.Art.DiscArt)]</value>
		<value>common/white.jpg</value>
	</variable>
	<variable name="PlayerResolution">
		<value condition="String.IsEqual(VideoPlayer.VideoResolution,4K)">4K</value>
		<value condition="String.IsEqual(VideoPlayer.VideoResolution,1080)">1080p</value>
		<value condition="String.IsEqual(VideoPlayer.VideoResolution,720)">720p</value>
		<value condition="String.IsEqual(VideoPlayer.VideoResolution,480)">480p</value>
		<value>$INFO[VideoPlayer.VideoResolution]</value>
	</variable>
	<variable name="PlayerTimeRemaining">
		<value condition="Integer.IsGreater(Player.TimeRemaining,60)">$INFO[Player.TimeRemaining]</value>
		<value>$INFO[Player.TimeRemaining(ss)] $LOCALIZE[31077]</value>
	</variable>
	<variable name="PlayerTime">
		<value condition="VideoPlayer.HasEpg">$INFO[PVR.EpgEventElapsedTime]</value>
		<value condition="Integer.IsGreater(Player.Duration(h),0)">$INFO[Player.Time(h:mm:ss)]</value>
		<value>$INFO[Player.Time(mm:ss)]</value>
	</variable>
	<variable name="PlayerDuration">
		<value condition="VideoPlayer.HasEpg">$INFO[PVR.EpgEventDuration]</value>
		<value condition="Integer.IsGreater(Player.Duration(h),0)">$INFO[Player.Duration(h:mm:ss)]</value>
		<value>$INFO[Player.Duration(mm:ss)]</value>
	</variable>
	<variable name="PlayerFinishTime">
		<value condition="VideoPlayer.HasEpg + !String.IsEmpty(PVR.EpgEventFinishTime)">$INFO[PVR.EpgEventFinishTime]</value>
		<value condition="!VideoPlayer.HasEpg + !String.IsEmpty(VideoPlayer.FinishTime)">$INFO[VideoPlayer.FinishTime]</value>
	</variable>
	<variable name="PlayerPlayPauseLabel">
		<value condition="Player.Paused">$LOCALIZE[31096]</value>
		<value>$LOCALIZE[31095]</value>
	</variable>
	<variable name="PlayerRecordingLabel">
		<value condition="PVR.IsRecordingPlayingChannel">$LOCALIZE[19059]</value>
		<value>$LOCALIZE[264]</value>
	</variable>
	<variable name="DurationMinutes">
		<value condition="String.IsEqual(ListItem.DBtype,song)">$INFO[ListItem.Duration]</value>
		<value condition="Integer.IsGreater(ListItem.Duration(mins),1)">$INFO[ListItem.Duration(mins)] $LOCALIZE[31089]</value>
		<value condition="Integer.IsEqual(ListItem.Duration(mins),1)">$INFO[ListItem.Duration(mins)] $LOCALIZE[31090]</value>
		<value>$INFO[ListItem.Duration(secs),, $LOCALIZE[31077]]</value>
	</variable>
	<variable name="PVRPlayerDuration">
		<value condition="Integer.IsGreater(PVR.EpgEventDuration(mins),1)">$INFO[PVR.EpgEventDuration(mins)] $LOCALIZE[31089]</value>
		<value condition="Integer.IsEqual(PVR.EpgEventDuration(mins),1)">$INFO[PVR.EpgEventDuration(mins)] $LOCALIZE[31090]</value>
		<value>$INFO[PVR.EpgEventDuration(secs),, $LOCALIZE[31077]]</value>
	</variable>
	<variable name="PlayerDurationMinutes">
		<value condition="Player.HasAudio">$INFO[Player.Duration]</value>
		<value condition="VideoPlayer.HasEpg + Integer.IsGreater(PVR.EpgEventDuration(mins),1)">$INFO[PVR.EpgEventDuration(mins)] $LOCALIZE[31089]</value>
		<value condition="VideoPlayer.HasEpg + Integer.IsEqual(PVR.EpgEventDuration(mins),1)">$INFO[PVR.EpgEventDuration(mins)] $LOCALIZE[31090]</value>
		<value condition="Integer.IsGreater(Player.Duration(mins),1)">$INFO[Player.Duration(mins)] $LOCALIZE[31089]</value>
		<value condition="Integer.IsEqual(Player.Duration(mins),1)">$INFO[Player.Duration(mins)] $LOCALIZE[31090]</value>
		<value>$INFO[Player.Duration(secs),, $LOCALIZE[31077]]</value>
	</variable>
	<variable name="ListItemAudioChannels">
		<value condition="Integer.IsEqual(ListItem.AudioChannels,1)">Mono</value>
		<value condition="Integer.IsEqual(ListItem.AudioChannels,2)">2.0</value>
		<value condition="Integer.IsEqual(ListItem.AudioChannels,4)">4.0</value>
		<value condition="Integer.IsEqual(ListItem.AudioChannels,6)">5.1</value>
		<value condition="Integer.IsEqual(ListItem.AudioChannels,7)">6.1</value>
		<value condition="Integer.IsEqual(ListItem.AudioChannels,8)">7.1</value>
		<value condition="Integer.IsEqual(ListItem.AudioChannels,10)">9.1</value>
	</variable>
	<variable name="ListItemAudio">
		<value condition="String.Contains(ListItem.AudioCodec,dtshd)">DTS-HD</value>
		<value condition="String.Contains(ListItem.AudioCodec,dca) | String.Contains(ListItem.AudioCodec,dts)">DTS</value>
		<value condition="String.Contains(ListItem.AudioCodec,truehd)">TrueHD</value>
		<value condition="String.Contains(ListItem.AudioCodec,eac3)">Dolby+</value>
		<value condition="String.Contains(ListItem.AudioCodec,ac3)">AC3</value>
		<value condition="String.Contains(ListItem.AudioCodec,mp3)">MP3</value>
		<value condition="String.Contains(ListItem.AudioCodec,mp2)">MP2</value>
		<value condition="String.Contains(ListItem.AudioCodec,mp1)">MP1</value>
		<value condition="String.Contains(ListItem.AudioCodec,vorbis)">Vorbis</value>
		<value condition="String.Contains(ListItem.AudioCodec,aac)">AAC</value>
		<value condition="String.Contains(ListItem.AudioCodec,wmav2)">WMA</value>
		<value condition="String.Contains(ListItem.AudioCodec,wmapro)">WMA Pro</value>
		<value condition="String.Contains(ListItem.AudioCodec,pcm)">PCM</value>
		<value condition="String.Contains(ListItem.AudioCodec,cook)">Cook</value>
	</variable>
	<variable name="PlayerAudioChannels">
		<value condition="Integer.IsEqual(VideoPlayer.AudioChannels,1)">Mono</value>
		<value condition="Integer.IsEqual(VideoPlayer.AudioChannels,2)">2.0</value>
		<value condition="Integer.IsEqual(VideoPlayer.AudioChannels,4)">4.0</value>
		<value condition="Integer.IsEqual(VideoPlayer.AudioChannels,6)">5.1</value>
		<value condition="Integer.IsEqual(VideoPlayer.AudioChannels,7)">6.1</value>
		<value condition="Integer.IsEqual(VideoPlayer.AudioChannels,8)">7.1</value>
		<value condition="Integer.IsEqual(VideoPlayer.AudioChannels,10)">9.1</value>
	</variable>
	<variable name="PlayerAudio">
		<value condition="String.Contains(VideoPlayer.AudioCodec,dtshd)">DTS-HD</value>
		<value condition="String.Contains(VideoPlayer.AudioCodec,dca) | String.Contains(VideoPlayer.AudioCodec,dts)">DTS</value>
		<value condition="String.Contains(VideoPlayer.AudioCodec,truehd)">TrueHD</value>
		<value condition="String.Contains(VideoPlayer.AudioCodec,eac3)">Dolby+</value>
		<value condition="String.Contains(VideoPlayer.AudioCodec,ac3)">AC3</value>
		<value condition="String.Contains(VideoPlayer.AudioCodec,mp3)">MP3</value>
		<value condition="String.Contains(VideoPlayer.AudioCodec,mp2)">MP2</value>
		<value condition="String.Contains(VideoPlayer.AudioCodec,mp1)">MP1</value>
		<value condition="String.Contains(VideoPlayer.AudioCodec,vorbis)">Vorbis</value>
		<value condition="String.Contains(VideoPlayer.AudioCodec,aac)">AAC</value>
		<value condition="String.Contains(VideoPlayer.AudioCodec,wmav2)">WMA</value>
		<value condition="String.Contains(VideoPlayer.AudioCodec,wmapro)">WMA Pro</value>
		<value condition="String.Contains(VideoPlayer.AudioCodec,pcm)">PCM</value>
		<value condition="String.Contains(VideoPlayer.AudioCodec,cook)">Cook</value>
	</variable>
	<variable name="VideoInfoButton8">
		<value condition="String.IsEqual(ListItem.DBType,season) + String.StartsWith(ListItem.Path,plugin://plugin.video.embycon) + String.IsEqual(ListItem.Label,All)">$LOCALIZE[31011]</value>
		<value condition="String.IsEqual(ListItem.Label,$LOCALIZE[20366])">$LOCALIZE[31011]</value>
		<value condition="String.IsEqual(ListItem.DBType,season)">$LOCALIZE[31013]</value>
		<value condition="String.IsEqual(ListItem.DBType,tvshow)">$LOCALIZE[31011]</value>
		<value condition="ListItem.IsResumable">$LOCALIZE[13404]</value>
		<value condition="Integer.IsGreater(ListItem.PlayCount,0)">$LOCALIZE[31009]</value>
		<value>$LOCALIZE[31010]</value>
	</variable>
	<variable name="TinyInfoDialogHeadline">
		<value condition="Window.IsVisible(DialogFullScreenInfo.xml) + !String.IsEmpty(VideoPlayer.TvShowTitle)">$INFO[VideoPlayer.TvShowTitle]</value>
		<value condition="Window.IsVisible(DialogFullScreenInfo.xml)">$INFO[VideoPlayer.Title]</value>
		<value condition="!String.IsEmpty(ListItem.TvShowTitle)">$INFO[ListItem.TvShowTitle]</value>
		<value condition="String.IsEqual(ListItem.DBType,album)">$INFO[ListItem.AlbumArtist,, - ]$INFO[ListItem.Album]</value>
		<value>$INFO[ListItem.Title]</value>
	</variable>
	<variable name="TinyInfoDialogPlot">
		<value condition="Window.IsVisible(DialogFullScreenInfo.xml)">$INFO[VideoPlayer.Season,S,:]$INFO[VideoPlayer.Episode,E, [CR][CR]]$VAR[PlayerDurationMinutes,$LOCALIZE[180]: ,[CR][CR]]$INFO[VideoPlayer.Plot]</value>
		<value condition="String.IsEqual(ListItem.DBType,Episode)">$INFO[ListItem.Season,S,:]$INFO[ListItem.Episode,E, - ]$INFO[ListItem.Title,,[CR][CR]]$VAR[DurationMinutes,$LOCALIZE[180]: ,[CR][CR]]$INFO[ListItem.Plot]</value>
		<value condition="String.IsEqual(ListItem.DBType,song)">$VAR[DurationMinutes,$LOCALIZE[180]: ,[CR][CR]]$INFO[ListItem.Artist]$INFO[ListItem.Album, - ,[CR][CR]]$INFO[ListItem.Property(Album_Description)]</value>
		<value condition="String.IsEqual(ListItem.DBType,musicvideo)">$VAR[DurationMinutes,$LOCALIZE[180]: ]</value>
		<value condition="String.IsEqual(ListItem.DBType,album) + !String.IsEmpty(ListItem.Property(Album_Description))">$INFO[ListItem.Property(Album_Description)]</value>
		<value condition="!String.IsEmpty(ListItem.Plot)">$INFO[ListItem.Plot]</value>
		<value>$LOCALIZE[19055]</value>
	</variable>
	<variable name="TinyGlobalSearchPlot">
		<value condition="!String.IsEmpty(Container(100).ListItem.Property(Plot))">$INFO[Container(100).ListItem.Property(Plot)]</value>
		<value condition="!String.IsEmpty(Container(100).ListItem.Property(Artist_Description))">$INFO[Container(100).ListItem.Property(Artist_Description)]</value>
		<value condition="!String.IsEmpty(Container(100).ListItem.Property(Album_Description))">$INFO[Container(100).ListItem.Property(Album_Description)]</value>
		<value condition="!String.IsEmpty(Container(100).ListItem.Property(Comment))">$INFO[Container(100).ListItem.Property(Comment)]</value>
	</variable>
	<variable name="ListViewPlot">
		<value condition="String.IsEqual(ListItem.DBType,set) + !String.StartsWith(ListItem.Path,plugin://plugin.video)">$INFO[Window(home).Property(SkinHelper.ListItem.Count),[B]$LOCALIZE[342]: ,[/B][CR]]$INFO[Window(home).Property(SkinHelper.ListItem.ExtendedPlot)]</value>
		<value condition="Window.IsVisible(tvrecordings)">$INFO[ListItem.Plot]</value>
		<value condition="!String.IsEmpty(ListItem.Property(Album_Description))">$INFO[ListItem.Property(Album_Description)]</value>
		<value condition="!String.IsEmpty(ListItem.Property(Artist_Description))">$INFO[ListItem.Property(Artist_Description)]</value>
		<value condition="!String.IsEmpty(ListItem.AddonDescription)">$INFO[ListItem.AddonDescription]</value>
		<value>$INFO[ListItem.Tagline,[B],[/B][CR][CR]]$INFO[ListItem.Plot]</value>
	</variable>
	<variable name="SetViewPlot">
		<value condition="String.IsEqual(ListItem.DBtype,set)">$INFO[Window(home).Property(SkinHelper.ListItem.Plot)]</value>
		<value>$INFO[ListItem.Tagline,[B],[/B][CR]]$INFO[ListItem.Plot]</value>
	</variable>
	<variable name="ArtistInfoPlot">
		<value condition="!String.IsEmpty(ListItem.Property(Artist_Description))">$INFO[ListItem.Property(Artist_Description)]</value>
		<value>$LOCALIZE[19055]</value>
	</variable>
	<variable name="PVRTimerIcon">
		<value condition="ListItem.IsRecording + ListItem.HasTimerSchedule">icons/pvr/icon_timer.png</value>
		<value condition="ListItem.IsRecording">icons/pvr/icon_recording.png</value>
		<value condition="ListItem.HasTimerSchedule + ListItem.TimerHasError">icons/pvr/icon_timer_error.png</value>
		<value condition="ListItem.HasTimer + ListItem.TimerHasError">icons/pvr/icon_record_error.png</value>
		<value condition="ListItem.HasTimerSchedule + ListItem.TimerHasConflict">icons/pvr/icon_timer_conflict.png</value>
		<value condition="ListItem.HasTimer + ListItem.TimerHasConflict">icons/pvr/PVR-HasTimerConflict.png</value>
		<value condition="ListItem.HasRecording">icons/pvr/icon_recording.png</value>
		<value condition="ListItem.HasTimerSchedule">icons/pvr/icon_timer.png</value>
		<value condition="ListItem.HasTimer">icons/pvr/icon_recording.png</value>
	</variable>
	<variable name="PVRTimerStatus">
		<value condition="!ListItem.TimerIsActive">deaktiviert</value>
		<value>aktiv</value>
	</variable>
	<variable name="VolumeIconCircle">
		<value condition="Player.Muted">0</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,10)">$INFO[Control.GetLabel(404)]</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,9)">9</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,8)">8</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,7)">7</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,6)">6</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,5)">5</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,4)">4</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,3)">3</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,2)">2</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,1)">1</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,0)">0</value>
	</variable>
	<variable name="VolumeIcon">
		<value condition="Player.Muted"></value>
		<value condition="Integer.IsGreater(player.volume,75)"></value>
		<value condition="Integer.IsGreater(player.volume,25)"></value>
		<value condition="!Integer.IsGreater(player.volume,25)"></value>
	</variable>
	<variable name="VolumeDetails">
		<value condition="!Player.Muted + Integer.IsGreaterOrEqual(player.volume,10)">$INFO[Control.GetLabel(404),,%]</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,9)">9%</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,8)">8%</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,7)">7%</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,6)">6%</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,5)">5%</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,4)">4%</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,3)">3%</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,2)">2%</value>
		<value condition="Integer.IsGreaterOrEqual(player.volume,1)">1%</value>
		<value>$LOCALIZE[31043]</value>
	</variable>
	<variable name="ExtendedProgressCircle">
		<value condition="String.IsEqual(Control.GetLabel(32),100)">100</value>
		<value condition="String.IsEqual(Control.GetLabel(32),99)">99</value>
		<value condition="String.IsEqual(Control.GetLabel(32),98)">98</value>
		<value condition="String.IsEqual(Control.GetLabel(32),97)">97</value>
		<value condition="String.IsEqual(Control.GetLabel(32),96)">96</value>
		<value condition="String.IsEqual(Control.GetLabel(32),95)">95</value>
		<value condition="String.IsEqual(Control.GetLabel(32),94)">94</value>
		<value condition="String.IsEqual(Control.GetLabel(32),93)">93</value>
		<value condition="String.IsEqual(Control.GetLabel(32),92)">92</value>
		<value condition="String.IsEqual(Control.GetLabel(32),91)">91</value>
		<value condition="String.IsEqual(Control.GetLabel(32),90)">90</value>
		<value condition="String.IsEqual(Control.GetLabel(32),89)">89</value>
		<value condition="String.IsEqual(Control.GetLabel(32),88)">88</value>
		<value condition="String.IsEqual(Control.GetLabel(32),87)">87</value>
		<value condition="String.IsEqual(Control.GetLabel(32),86)">86</value>
		<value condition="String.IsEqual(Control.GetLabel(32),85)">85</value>
		<value condition="String.IsEqual(Control.GetLabel(32),84)">84</value>
		<value condition="String.IsEqual(Control.GetLabel(32),83)">83</value>
		<value condition="String.IsEqual(Control.GetLabel(32),82)">82</value>
		<value condition="String.IsEqual(Control.GetLabel(32),81)">81</value>
		<value condition="String.IsEqual(Control.GetLabel(32),80)">80</value>
		<value condition="String.IsEqual(Control.GetLabel(32),79)">79</value>
		<value condition="String.IsEqual(Control.GetLabel(32),78)">78</value>
		<value condition="String.IsEqual(Control.GetLabel(32),77)">77</value>
		<value condition="String.IsEqual(Control.GetLabel(32),76)">76</value>
		<value condition="String.IsEqual(Control.GetLabel(32),75)">75</value>
		<value condition="String.IsEqual(Control.GetLabel(32),74)">74</value>
		<value condition="String.IsEqual(Control.GetLabel(32),73)">73</value>
		<value condition="String.IsEqual(Control.GetLabel(32),72)">72</value>
		<value condition="String.IsEqual(Control.GetLabel(32),71)">71</value>
		<value condition="String.IsEqual(Control.GetLabel(32),70)">70</value>
		<value condition="String.IsEqual(Control.GetLabel(32),69)">69</value>
		<value condition="String.IsEqual(Control.GetLabel(32),68)">68</value>
		<value condition="String.IsEqual(Control.GetLabel(32),67)">67</value>
		<value condition="String.IsEqual(Control.GetLabel(32),66)">66</value>
		<value condition="String.IsEqual(Control.GetLabel(32),65)">65</value>
		<value condition="String.IsEqual(Control.GetLabel(32),64)">64</value>
		<value condition="String.IsEqual(Control.GetLabel(32),63)">63</value>
		<value condition="String.IsEqual(Control.GetLabel(32),62)">62</value>
		<value condition="String.IsEqual(Control.GetLabel(32),61)">61</value>
		<value condition="String.IsEqual(Control.GetLabel(32),60)">60</value>
		<value condition="String.IsEqual(Control.GetLabel(32),59)">59</value>
		<value condition="String.IsEqual(Control.GetLabel(32),58)">58</value>
		<value condition="String.IsEqual(Control.GetLabel(32),57)">57</value>
		<value condition="String.IsEqual(Control.GetLabel(32),56)">56</value>
		<value condition="String.IsEqual(Control.GetLabel(32),55)">55</value>
		<value condition="String.IsEqual(Control.GetLabel(32),54)">54</value>
		<value condition="String.IsEqual(Control.GetLabel(32),53)">53</value>
		<value condition="String.IsEqual(Control.GetLabel(32),52)">52</value>
		<value condition="String.IsEqual(Control.GetLabel(32),51)">51</value>
		<value condition="String.IsEqual(Control.GetLabel(32),50)">50</value>
		<value condition="String.IsEqual(Control.GetLabel(32),49)">49</value>
		<value condition="String.IsEqual(Control.GetLabel(32),48)">48</value>
		<value condition="String.IsEqual(Control.GetLabel(32),47)">47</value>
		<value condition="String.IsEqual(Control.GetLabel(32),46)">46</value>
		<value condition="String.IsEqual(Control.GetLabel(32),45)">45</value>
		<value condition="String.IsEqual(Control.GetLabel(32),44)">44</value>
		<value condition="String.IsEqual(Control.GetLabel(32),43)">43</value>
		<value condition="String.IsEqual(Control.GetLabel(32),42)">42</value>
		<value condition="String.IsEqual(Control.GetLabel(32),41)">41</value>
		<value condition="String.IsEqual(Control.GetLabel(32),40)">40</value>
		<value condition="String.IsEqual(Control.GetLabel(32),39)">39</value>
		<value condition="String.IsEqual(Control.GetLabel(32),38)">38</value>
		<value condition="String.IsEqual(Control.GetLabel(32),37)">37</value>
		<value condition="String.IsEqual(Control.GetLabel(32),36)">36</value>
		<value condition="String.IsEqual(Control.GetLabel(32),35)">35</value>
		<value condition="String.IsEqual(Control.GetLabel(32),34)">34</value>
		<value condition="String.IsEqual(Control.GetLabel(32),33)">33</value>
		<value condition="String.IsEqual(Control.GetLabel(32),32)">32</value>
		<value condition="String.IsEqual(Control.GetLabel(32),31)">31</value>
		<value condition="String.IsEqual(Control.GetLabel(32),30)">30</value>
		<value condition="String.IsEqual(Control.GetLabel(32),29)">29</value>
		<value condition="String.IsEqual(Control.GetLabel(32),28)">28</value>
		<value condition="String.IsEqual(Control.GetLabel(32),27)">27</value>
		<value condition="String.IsEqual(Control.GetLabel(32),26)">26</value>
		<value condition="String.IsEqual(Control.GetLabel(32),25)">25</value>
		<value condition="String.IsEqual(Control.GetLabel(32),24)">24</value>
		<value condition="String.IsEqual(Control.GetLabel(32),23)">23</value>
		<value condition="String.IsEqual(Control.GetLabel(32),22)">22</value>
		<value condition="String.IsEqual(Control.GetLabel(32),21)">21</value>
		<value condition="String.IsEqual(Control.GetLabel(32),20)">20</value>
		<value condition="String.IsEqual(Control.GetLabel(32),19)">19</value>
		<value condition="String.IsEqual(Control.GetLabel(32),18)">18</value>
		<value condition="String.IsEqual(Control.GetLabel(32),17)">17</value>
		<value condition="String.IsEqual(Control.GetLabel(32),16)">16</value>
		<value condition="String.IsEqual(Control.GetLabel(32),15)">15</value>
		<value condition="String.IsEqual(Control.GetLabel(32),14)">14</value>
		<value condition="String.IsEqual(Control.GetLabel(32),13)">13</value>
		<value condition="String.IsEqual(Control.GetLabel(32),12)">12</value>
		<value condition="String.IsEqual(Control.GetLabel(32),11)">11</value>
		<value condition="String.IsEqual(Control.GetLabel(32),10)">10</value>
		<value condition="String.EndsWith(Control.GetLabel(32),9)">9</value>
		<value condition="String.EndsWith(Control.GetLabel(32),8)">8</value>
		<value condition="String.EndsWith(Control.GetLabel(32),7)">7</value>
		<value condition="String.EndsWith(Control.GetLabel(32),6)">6</value>
		<value condition="String.EndsWith(Control.GetLabel(32),5)">5</value>
		<value condition="String.EndsWith(Control.GetLabel(32),4)">4</value>
		<value condition="String.EndsWith(Control.GetLabel(32),3)">3</value>
		<value condition="String.EndsWith(Control.GetLabel(32),2)">2</value>
		<value condition="String.EndsWith(Control.GetLabel(32),1)">1</value>
		<value condition="String.EndsWith(Control.GetLabel(32),1)">1</value>
	</variable>
	<variable name="ListItemTitleLabel">
		<value condition="!String.IsEmpty(ListItem.TVShowTitle)">$INFO[ListItem.TVShowTitle]</value>
		<value condition="!String.IsEmpty(ListItem.Title)">$INFO[ListItem.Title]</value>
		<value condition="!String.IsEmpty(ListItem.Label)">$INFO[ListItem.Label]</value>
		<value>n/a</value>
	</variable>
	<variable name="PlayerRecordIconColor">
		<value condition="!Control.HasFocus(607) + PVR.IsRecordingPlayingChannel">red</value>
		<value condition="!Control.HasFocus(607)">white</value>
	</variable>
	<variable name="PlayerFullLabel">
		<value condition="String.IsEqual(VideoPlayer.Title,stream) + String.Contains(Player.Filenameandpath,/emby/videos/)">$LOCALIZE[31186]</value>
		<value condition="!String.IsEmpty(MusicPlayer.Title) + !String.Contains(MusicPlayer.Title,pvr.hts_)">$INFO[MusicPlayer.Artist,, - ]$INFO[MusicPlayer.Tracknumber,,. ]$INFO[MusicPlayer.Title]</value>
		<value condition="!String.IsEmpty(MusicPlayer.Title)">$INFO[MusicPlayer.Artist]</value>
		<value condition="VideoPlayer.Content(livetv)">$INFO[VideoPlayer.Title]</value>
		<value condition="!String.IsEmpty(VideoPlayer.TVShowTitle) + [!VideoPlayer.IsFullscreen | Window.IsVisible(shutdownmenu)]">$INFO[VideoPlayer.TVShowTitle,, - ]$INFO[VideoPlayer.Season,S,:]$INFO[VideoPlayer.Episode,E, - ]$INFO[VideoPlayer.Title]</value>
		<value condition="!String.IsEmpty(VideoPlayer.TVShowTitle)">$INFO[VideoPlayer.Season,S,:]$INFO[VideoPlayer.Episode,E, - ]$INFO[VideoPlayer.Title]</value>
		<value>$INFO[VideoPlayer.Title]</value>
	</variable>
	<variable name="PlayerTitleLabel">
		<value condition="String.IsEqual(VideoPlayer.Filename,stream) + String.Contains(VideoPlayer.Filenameandpath,/emby/videos/)">$LOCALIZE[31186]</value>
		<value condition="!String.IsEmpty(MusicPlayer.Title)">$INFO[MusicPlayer.Title]</value>
		<value condition="!String.IsEmpty(VideoPlayer.TVShowTitle)">$INFO[VideoPlayer.TVShowTitle]</value>
		<value condition="VideoPlayer.Content(livetv) | String.StartsWith(Player.Filenameandpath,pvr://)">$INFO[VideoPlayer.Channelname]</value>
		<value>$INFO[VideoPlayer.Title]</value>
	</variable>
	<variable name="PlayerClearlogo">
		<value condition="!String.IsEmpty(Player.Art(tvshow.clearlogo))">$INFO[Player.Art(tvshow.clearlogo)]</value>
		<value condition="!String.IsEmpty(Player.Art(clearlogo))">$INFO[Player.Art(clearlogo)]</value>
	</variable>
	<variable name="PlayerTimeLabels">>
		<value condition="Window.IsVisible(fullscreeninfo)">$VAR[PlayerTime]$VAR[PlayerDuration, / ]</value>
		<value>$VAR[PlayerTime]$VAR[PlayerDuration, / ]$VAR[PlayerFinishTime,  -  $LOCALIZE[31037] ]</value>
	</variable>
	<variable name="PlayerIcon">
		<value condition="!String.IsEmpty(Player.Art(tvshow.poster))">$INFO[Player.Art(tvshow.poster)]</value>
		<value condition="!String.IsEmpty(Player.Art(poster))">$INFO[Player.Art(poster)]</value>
		<value condition="!String.IsEmpty(VideoPlayer.Cover) + !String.StartsWith(VideoPlayer.Cover,default)">$INFO[VideoPlayer.Cover]</value>
		<value condition="!String.IsEmpty(MusicPlayer.Cover) + !String.StartsWith(MusicPlayer.Cover,default)">$INFO[MusicPlayer.Cover]</value>
	</variable>
	<variable name="PlayerCastContent">
		<value condition="!String.IsEmpty(Window(home).Property(plugin.video.embycon-currently_playing_id))">plugin://plugin.video.embycon?mode=WIDGET_CONTENT_CAST&amp;id=$INFO[Window(home).Property(plugin.video.embycon-currently_playing_id)]</value>
		<value condition="!String.IsEmpty(VideoPlayer.DBID) + VideoPlayer.Content(episodes)">plugin://plugin.get.cast?mode=title&amp;&amp;dbtype=tvshow&amp;&amp;dbinfo=$INFO[VideoPlayer.TVShowTitle]</value>
		<value condition="!String.IsEmpty(VideoPlayer.DBID) + !String.IsEqual(VideoPlayer.DBID,0) + !VideoPlayer.Content(episodes)">plugin://plugin.get.cast?mode=dbid&amp;&amp;dbtype=movie&amp;&amp;dbinfo=$INFO[VideoPlayer.DBID]</value>
		<value condition="!String.IsEmpty(VideoPlayer.DBID) + String.IsEqual(VideoPlayer.DBID,0) + !VideoPlayer.Content(episodes)">plugin://plugin.get.cast?mode=title&amp;&amp;dbtype=movie&amp;&amp;dbinfo=$INFO[VideoPlayer.Title]</value>
	</variable>
	<variable name="PlayerSimilarContent">
		<value condition="VideoPlayer.Content(episodes)">plugin://script.skin.helper.widgets/?action=similarshows&amp;imdbid=$INFO[VideoPlayer.IMDBNumber]</value>
		<value>plugin://script.skin.helper.widgets/?action=similar&amp;mediatype=movies&amp;imdbid=$INFO[VideoPlayer.IMDBNumber]</value>
	</variable>
	<variable name="PlayerForwardRewind">
		<value condition="Player.Forwarding4x">4x</value>
		<value condition="Player.Forwarding8x">8x</value>
		<value condition="Player.Forwarding16x">16x</value>
		<value condition="Player.Forwarding32x">32x</value>
		<value condition="Player.Rewinding4x">4x</value>
		<value condition="Player.Rewinding8x">8x</value>
		<value condition="Player.Rewinding16x">16x</value>
		<value condition="Player.Rewinding32x">32x</value>
	</variable>
	<variable name="PlayerSeekStepIcon">
		<value condition="[!String.IsEmpty(Player.SeekOffset) + !String.Contains(Player.SeekOffset,-)] | [!String.IsEmpty(Player.SeekStepSize) + !String.Contains(Player.SeekStepSize,-)]"></value>
		<value condition="[!String.IsEmpty(Player.SeekOffset) + String.Contains(Player.SeekOffset,-)] | [!String.IsEmpty(Player.SeekStepSize) + String.Contains(Player.SeekStepSize,-)]"></value>
	</variable>
	<variable name="PlayerSeekStepLabel">
		<value condition="!String.IsEmpty(PVR.EpgEventSeekTime) + VideoPlayer.HasEpg">$INFO[PVR.EpgEventSeekTime]</value>
		<value condition="!String.IsEmpty(Player.SeekNumeric)">$INFO[Player.SeekNumeric]</value>
		<value condition="!String.IsEmpty(Player.SeekTime)">$INFO[Player.SeekTime]</value>
		<value condition="!String.IsEmpty(Player.SeekStepSize)">$INFO[Player.SeekStepSize]</value>
		<value condition="!String.IsEmpty(Player.SeekOffset)">$INFO[Player.SeekOffset]</value>
	</variable>
	<variable name="PlaylistRepeatButtonLabel">
		<value condition="Playlist.IsRepeatOne">$LOCALIZE[31053]</value>
		<value condition="Playlist.IsRepeat">$LOCALIZE[593]</value>
		<value>$LOCALIZE[351]</value>
	</variable>
	<variable name="PlayerFanartEnabledButton">
		<value condition="!Skin.HasSetting(VisFanartDisabled)">$LOCALIZE[16041]</value>
		<value>$LOCALIZE[351]</value>
	</variable>
	<variable name="PlayerRandomFanartEnabledButton">
		<value condition="Skin.HasSetting(VisRandomFanart)">$LOCALIZE[16041]</value>
		<value>$LOCALIZE[351]</value>
	</variable>
	<variable name="PlaylistRepeatLabel">
		<value condition="Playlist.IsRepeatOne"></value>
		<value condition="Playlist.IsRepeat"></value>
	</variable>
	<variable name="PlaylistRepeatButtonColor">
		<value condition="Playlist.IsRepeatOne | Playlist.IsRepeat | Control.HasFocus(613)">emby</value>
	</variable>
	<variable name="VideoHWDecoder">
		<value condition="Player.Process(videohwdecoder)">HW</value>
		<value>SW</value>
	</variable>
	<variable name="PVRChannelMgrHeader">
		<value condition="!String.IsEmpty(Window.Property(IsRadio))">$LOCALIZE[19199] - $LOCALIZE[19024]</value>
		<value>$LOCALIZE[19199] - $LOCALIZE[19023]</value>
	</variable>
	<variable name="UserAvatar">
		<value condition="!String.IsEmpty(Window(Home).Property(EmbyUserImage))">$INFO[Window(Home).Property(EmbyUserImage)]</value>
		<value condition="!String.IsEmpty(Window(Home).Property(PlexUserImage))">$INFO[Window(Home).Property(PlexUserImage)]</value>
		<value condition="!String.IsEmpty(System.ProfileThumb)">$INFO[System.ProfileThumb]</value>
		<value condition="!String.IsEmpty(Window(Home).Property(plugin.video.embycon-userimage))">$INFO[Window(Home).Property(plugin.video.embycon-userimage)]</value>
		<value>defaultuser.png</value>
	</variable>
	<variable name="PVRLabel">
		<value condition="!Pvr.HasRadioChannels + Pvr.HasTVChannels">$LOCALIZE[31042]</value>
		<value condition="Pvr.HasRadioChannels + !Pvr.HasTVChannels">$LOCALIZE[19021]</value>
		<value>$LOCALIZE[31042] &amp; $LOCALIZE[19021]</value>
	</variable>
	<variable name="SettingHelpText">
		<value condition="ControlGroup(100).HasFocus(101)">$LOCALIZE[31105]</value>
		<value condition="ControlGroup(100).HasFocus(102)">$LOCALIZE[31106]</value>
		<value condition="ControlGroup(100).HasFocus(103)">$LOCALIZE[31147]</value>
		<value condition="ControlGroup(100).HasFocus(104)">$LOCALIZE[31153]</value>
		<value condition="ControlGroup(100).HasFocus(105)">$LOCALIZE[31153]</value>
		<value condition="ControlGroup(100).HasFocus(106)">$LOCALIZE[31153]</value>
		<value condition="ControlGroup(100).HasFocus(107)">$LOCALIZE[31223]</value>
	</variable>
	<variable name="SkinSettingsHeadline">
		<value condition="ControlGroup(100).HasFocus(101)">$LOCALIZE[480]</value>
		<value condition="ControlGroup(100).HasFocus(102)">$LOCALIZE[10000]</value>
		<value condition="ControlGroup(100).HasFocus(103)">$LOCALIZE[31134]</value>
		<value condition="ControlGroup(100).HasFocus(104)">$LOCALIZE[31173]</value>
		<value condition="ControlGroup(100).HasFocus(105)">$LOCALIZE[31172]</value>
		<value condition="ControlGroup(100).HasFocus(106)">$LOCALIZE[31174]</value>
		<value condition="ControlGroup(100).HasFocus(106)">$LOCALIZE[31224]</value>
	</variable>
	<variable name="NextUpThumb">
		<value condition="!String.IsEmpty(Control.GetLabel(4002))">$INFO[Control.GetLabel(4002)]</value>
		<value condition="!String.IsEmpty(Control.GetLabel(4007))">$INFO[Control.GetLabel(4007)]</value>
		<value condition="!String.IsEmpty(Control.GetLabel(3008))">$INFO[Control.GetLabel(3008)]</value>
		<value condition="!String.IsEmpty(Control.GetLabel(3005))">$INFO[Control.GetLabel(3005)]</value>
	</variable>
	<variable name="BackgroundAlphaLabel">
		<value condition="!String.IsEmpty(Skin.String(BackgroundAlpha.label))">$INFO[Skin.String(BackgroundAlpha.label)]</value>
		<value>$LOCALIZE[31157]</value>
	</variable>
	<variable name="MusicPlayerFanart">
		<value condition="!String.IsEmpty(Window(Home).Property(SkinHelper.Player.Art.Fanart))">$INFO[Window(Home).Property(SkinHelper.Player.Art.Fanart)]</value>
		<value condition="!String.IsEmpty(Player.Art(fanart))">$INFO[Player.Art(fanart)]</value>
		<value>views/player/music_back.jpg</value>
	</variable>
	<variable name="ExtendedInfoFilmographyMovies">
		<value condition="Integer.IsGreater(Container(150).NumItems,1)">$INFO[Container(150).NumItems,, $LOCALIZE[342]]</value>
		<value condition="Integer.IsEqual(Container(150).NumItems,1)">$INFO[Container(150).NumItems,, $LOCALIZE[20338]]</value>
	</variable>
	<variable name="ExtendedInfoFilmographyTVShows">
		<value condition="Integer.IsGreater(Container(250).NumItems,1)">$INFO[Container(250).NumItems,, $LOCALIZE[20343]]</value>
		<value condition="Integer.IsEqual(Container(250).NumItems,1)">$INFO[Container(250).NumItems,, $LOCALIZE[20364]]</value>
	</variable>
	<variable name="ExtendedInfoFilmographyCount">
		<value condition="Integer.IsGreater(Container(150).NumItems,0) + Integer.IsGreater(Container(250).NumItems,0)">$VAR[ExtendedInfoFilmographyMovies] &amp; $VAR[ExtendedInfoFilmographyTVShows]</value>
		<value condition="Integer.IsGreater(Container(150).NumItems,0) + !Integer.IsGreater(Container(250).NumItems,0)">$VAR[ExtendedInfoFilmographyMovies]</value>
		<value condition="!Integer.IsGreater(Container(150).NumItems,0) + Integer.IsGreater(Container(250).NumItems,0)">$VAR[ExtendedInfoFilmographyTVShows]</value>
	</variable>
	<variable name="ListItemStatus">
		<value condition="String.IsEqual(Window(home).Property(SkinHelper.ListItem.Status),Ended)">$LOCALIZE[31196]</value>
		<value condition="String.IsEqual(Window(home).Property(SkinHelper.ListItem.Status),continuing)">$LOCALIZE[31197]</value>
	</variable>
	<variable name="SortLetterLabel">
		<value condition="Window.IsVisible(DialogPVRChannelsOSD.xml)">$INFO[Container(11).ListItem.ChannelNumberLabel]</value>
		<value condition="Container.Content(episodes)">$INFO[ListItem.Episode]</value>
		<value condition="Container.Content(seasons)">$INFO[ListItem.Season]</value>
		<value condition="Window.IsVisible(MyPVRChannels.xml)">$INFO[ListItem.ChannelNumberLabel]</value>
		<value>$INFO[ListItem.SortLetter]</value>
	</variable>
</includes>