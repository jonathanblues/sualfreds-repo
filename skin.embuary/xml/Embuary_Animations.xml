<?xml version="1.0" encoding="UTF-8"?>
<includes>
	<include name="WindowOpen_GreenBar">
		<animation effect="zoom" start="0,100" end="100,100" time="800" center="auto" tween="quadratic" easing="out" delay="200">WindowOpen</animation>
	</include>
	<include name="VisAnimation">
		<animation effect="zoom" start="110" end="130" center="auto" time="14000" pulse="true" condition="!Skin.HasSetting(VisAnimationDisabled) + [!String.IsEmpty(Player.Art(fanart)) | !String.IsEmpty(Window(Home).Property(SkinHelper.Player.Art.Fanart))]" reversible="false">Conditional</animation>
		<animation effect="slide" start="-20,-20" end="40,40" time="15000" pulse="true" condition="!Skin.HasSetting(VisAnimationDisabled) + [!String.IsEmpty(Player.Art(fanart)) | !String.IsEmpty(Window(Home).Property(SkinHelper.Player.Art.Fanart))]" reversible="false">Conditional</animation>
		<animation effect="zoom" end="100" center="auto" time="0" condition="Skin.HasSetting(VisAnimationDisabled) + [!String.IsEmpty(Player.Art(fanart)) | !String.IsEmpty(Window(Home).Property(SkinHelper.Player.Art.Fanart))]" reversible="false">Conditional</animation>
		<animation effect="slide" end="0,0" time="0" condition="Skin.HasSetting(VisAnimationDisabled) + [!String.IsEmpty(Player.Art(fanart)) | !String.IsEmpty(Window(Home).Property(SkinHelper.Player.Art.Fanart))]" reversible="false">Conditional</animation>
	</include>
	<include name="OSD_Seek_Position">
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),5)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),6)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),7)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),8)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),9)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),10)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),11)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),12)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),13)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),14)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),15)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),16)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),17)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),18)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),19)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),20)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),21)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),22)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),23)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),24)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),25)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),26)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),27)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),28)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),29)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),30)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),31)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),32)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),33)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),34)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),35)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),36)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),37)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),38)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),39)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),40)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),41)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),42)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),43)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),44)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),45)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),46)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),47)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),48)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),49)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),50)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),51)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),52)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),53)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),54)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),55)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),56)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),57)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),58)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),59)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),60)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),61)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),62)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),63)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),64)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),65)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),66)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),67)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),68)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),69)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),70)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),71)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),72)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),73)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),74)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),75)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),76)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),77)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),78)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),79)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),80)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),81)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),82)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),83)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),84)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),85)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),86)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),87)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),88)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),89)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),90)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),91)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),92)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),93)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),94)">Conditional</animation>
		<animation effect="slide" end="15.8,0" time="0" condition="Integer.IsGreater(Control.GetLabel(401),95)">Conditional</animation>
	</include>
	<include name="Visible_Fade">
		<animation effect="fade" end="100" time="200">WindowOpen</animation>
		<animation effect="fade" start="100" end="0" time="200">WindowClose</animation>
		<animation effect="fade" end="100" time="200">Visible</animation>
		<animation effect="fade" start="100" end="0" time="200">Hidden</animation>
	</include>
	<include name="Bounce_Right">
		<animation condition="Window.IsVisible(1150) + Control.HasFocus($PARAM[id])" reversible="false" type="Conditional">
			<effect easing="out" end="-30,0" start="0,0" time="60" tween="sine" type="slide" />
			<effect delay="80" easing="out" end="30,0" start="0,0" time="120" tween="sine" type="slide" />
		</animation>
	</include>
	<include name="Window_OpenClose">
		<animation type="WindowOpen" reversible="false" condition="![Window.Previous(visualisation) + [String.StartsWith(Player.Filenameandpath,special://skin/extras) | !String.IsEmpty(Window(home).Property(SkinExtraSound))]]">
			<effect type="fade" delay="0" end="100" time="300" />
		</animation>
		<animation type="WindowClose" reversible="false" condition="![Window.Previous(visualisation) + [String.StartsWith(Player.Filenameandpath,special://skin/extras) | !String.IsEmpty(Window(home).Property(SkinExtraSound))]]">
			<effect type="fade" start="100" end="0" time="0" />
		</animation>
	</include>
	<include name="Visible_OpenClose">
		<animation type="Visible" reversible="false">
			<effect type="fade" delay="170" end="100" time="300" />
		</animation>
		<animation type="Hidden" reversible="false">
			<effect type="fade" start="100" end="0" time="0" />
		</animation>
	</include>
	<include name="Dialog_PopupOpenClose">
		<animation type="WindowOpen" reversible="false">
			<effect type="zoom" start="80" end="100" center="960,540" delay="160" tween="circle" easin="out" time="240" />
			<effect type="fade" delay="160" end="100" time="240" />
		</animation>
		<animation type="WindowClose" reversible="false">
			<effect type="zoom" start="100" end="80" center="960,540" easing="in" tween="circle" easin="out" time="240" />
			<effect type="fade" start="100" end="0" time="240" />
		</animation>
	</include>
	<include name="Visible_PopupOpenClose">
		<animation type="Visible" reversible="false">
			<effect type="zoom" start="80" end="100" center="960,540" delay="160" tween="circle" easin="out" time="240" />
			<effect type="fade" delay="160" end="100" time="240" />
		</animation>
		<animation type="Hidden" reversible="false">
			<effect type="zoom" start="100" end="80" center="960,540" easing="in" tween="circle" easin="out" time="240" />
			<effect type="fade" start="100" end="0" time="240" />
		</animation>
	</include>
	<include name="Animation_FocusTextureFade">
		<animation condition="Skin.HasSetting(MinimalFocusAnimation)" effect="fade" start="0" end="100" time="200" tween="sine">Focus</animation>
		<animation condition="Skin.HasSetting(MinimalFocusAnimation)" effect="fade" start="100" end="0" time="0">UnFocus</animation>
	</include>
	<include name="Animation_FocusBounce">
		<animation type="Focus" reversible="false" condition="!Skin.HasSetting(MinimalFocusAnimation) + [Container($PARAM[id]).OnNext | Container($PARAM[id]).OnPrevious | !String.IsEmpty(Window(home).Property(FocusBounce))]">
			<effect type="zoom" end="110" time="75" tween="sine" easing="out" center="auto" />
			<effect type="zoom" end="90.9090909" time="225" tween="sine" delay="100" easing="out" center="auto" />
		</animation>
	</include>
</includes>